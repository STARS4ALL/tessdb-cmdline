
1) mongo-db check --name | --near | --mac

--name: dos filas con name repetidos -> sacar datos de name, coord, place, mac 
--near: dos entradas cercanas en coordenadas -> sacar datos de name, coord, place, mac (permitimos mismo place) --disnatce=0
--mac: dos MAC repetidas pero con distinto nombre

2) Hacer un cross-check de nombres y MACs entre MongoDB y tessdb

SELECT name, mac_address, valid_since, valid_until, valid_state
FROM name_to_mac_t
WHERE name LIKE 'stars%'
ORDER BY cast(substr(name,6) as int) ASC, valid_since ASC;

SELECT count(*), name
FROM name_to_mac_t
WHERE name LIKE 'stars%'
GROUP BY name
ORDER BY cast(substr(name,6) as int) ASC;

== ANTIGUO
Retocar la utilidad de tess para mostar min(fecha), max(fecha) con reading counts y demás
en luger de la fecha metida por linea de comandos.
tess instrument coalesce --name <name> | --mac <mac> --test

SUSTITUIR TABLA
CREATE TABLE "location_t"
            (
            location_id             INTEGER PRIMARY KEY AUTOINCREMENT,  
            site                    TEXT,
            longitude               REAL,
            latitude                REAL,
            elevation               REAL,
            zipcode                 TEXT,
            location                TEXT,
            province                TEXT,
            state                   TEXT,
            country                 TEXT,
            timezone                TEXT DEFAULT 'Etc/UTC',
            contact_name            TEXT,
            contact_email           TEXT,
            organization            TEXT
            )

POR ESTA OTRA

CREATE TABLE location_t
(
    location_id             INTEGER,  
    place                   TEXT,
    longitude               REAL NOT NULL,
    latitude                REAL NOT NULL,
    masl                    REAL, -- meters above sea level
    zipcode                 TEXT,
    town                    TEXT, -- it can be a village, town, city, or municipality
    sub_region              TEXT, -- its type can be 'state_district','province'
    region                  TEXT, -- state
    country                 TEXT,
    timezone                TEXT DEFAULT 'Etc/UTC',
    contact_name            TEXT, -- still used but to be deprecated
    contact_email           TEXT, -- still used but to be deprecated
    organization            TEXT, -- stiil used but to be deprecated by organization_t

    UNIQUE(longitude, latitude),
    PRIMARY KEY(location_id) AUTOINCREMENT
)

Los campos que vayan a ser deprecados no deberian tener operaciones de create/update en la tess utility
Tabla de observer_t que tenga una referencia a la tabla organization_t
En la tabla de hechos se almacenan tanto las referencias al observador  

o bien

Esta tabla mixin maneja observadores que son o bien personas físicas (que pueden o no pertenecer a una organización)
o personas jurídicas (organizaciones)
Los atributos person_valid_* manejan el histórico de pertenencia de una persona a una organización

CREATE TABLE IF NOT EXISTS observer_t
(
    observer_id         INTEGER,
    obs_type            TEXT NOT NULL, -- Either 'person' or 'organization'
    -----------------------------------------------------------------------
    person_name         TEXT,      -- 
    person_surname      TEXT,      --
    person_title        TEXT,      -- 'Dr.' , 'Professor', etc. if applicable.
    -- These three manages history of a person within an organization
    person_valid_since  TIMESTAMP, -- 'YYYY-MM-DD HH:MM:SS'
    person_valid_until  TIMESTAMP, -- 'YYYY-MM-DD HH:MM:SS'
    person_valid_state  TEXT,      -- Either 'Current' or 'Expired' 
    ------------------------------------------------------------------------
    org_name            TEXT,      -- Organization name
    org_acronym         TEXT,      -- Organization acronym (i.e. AAM, UCM)
    org_description     TEXT,      -- Organization description
    org_email           TEXT,
    org_phone           TEXT,
    org_logo_url,       TEXT,      -- Organization logo URL
    org_web_url,        TEXT,      -- Organization web URL
    ------------------------------------------------------------------------
    PRIMARY KEY(observer_id)
);

