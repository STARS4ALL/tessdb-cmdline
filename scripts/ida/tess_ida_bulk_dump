#!/bin/bash
# This script dumps latest month readings from every TESS given in an instrument list file.

# ------------------------------------------------------------------------------
#                             AUXILIARY FUNCTIONS
# ------------------------------------------------------------------------------

query_names() {
dbase=$1
sqlite3 ${dbase} <<EOF
SELECT name 
FROM tess_v 
WHERE name like 'stars%' 
AND valid_state = 'Current' 
ORDER by CAST(substr(name, 6) as decimal) ASC;
EOF
}

# get the name from the script name without extensions

help() {
    name=$(basename ${0%.sh})
    echo "Usage:"
    echo "$name -d <database path> -o <dst dir> -m <latest|previous|YYYY-MM> -l <log file path prefix>"
    echo "Defaults to:"
    echo "name -d $DEFAULT_DATABASE -o $DEFAULT_DST_DIR -m $DEFAULT_MONTH -l $DEFAULT_LOG_FILE_PREFIX"
}

# ------------------------------------------------------------------------------- #

DEFAULT_DATABASE="/var/dbase/tess.db"
DEFAULT_DST_DIR="/var/dbase/reports/IDA"
DEFAULT_MONTH="latest"
DEFAULT_LOG_FILE_PREFIX=/var/log/ida_daily

TEE=$(which tee)
TESS_IDA=$(which tess-ida)
LOG_DATE=$(/usr/bin/date +%Y%m%d)


while getopts ":hd:o:m:l:" opt; do
    case ${opt} in
    d)
        dbase="${OPTARG}"
        ;;
    o)
        out_dir="${OPTARG}"
        ;;
    m)
        month="${OPTARG}"
        ;;
    l)
        log_file="${OPTARG}_${LOG_DATE}.log"
        ;;
    h)
        help
        exit 0
        ;;
    :)
        echo "Option -${OPTARG} requires an argument."
        exit 1
        ;;
    ?)
        echo "Invalid option: -${OPTARG}."
        exit 1
        ;;
  esac
done
shift "$((OPTIND-1))"


if  [[ ! -f $dbase || ! -r $dbase ]]; then
        echo "Database file $dbase does not exists or is not readable." | ${TEE} -a ${log_file}
        echo "Exiting" | ${TEE} -a ${log_file}
        exit 1
fi


photometers=$(query_names ${dbase})
# Loops over the instruments file and dumping data
for instrument in $photometers; do
    if [[ "$month" = "latest" ]];
    then
        echo "Generating latest month IDA file for TESS $instrument under ${out_dir}/${instrument}" | ${TEE} -a ${log_file}
        ${TESS_IDA} ${instrument} --log-file ${log_file} --latest-month -d ${dbase} -o ${out_dir} 
    elif [[ "$month" = "previous" ]];
    then
        log_file="${HOME}/dbase/log/ida_monthly_${LOG_DATE}.log"
        echo "Generating previous month IDA file for TESS $instrument under ${out_dir}/${instrument}" | ${TEE} -a ${log_file}
        ${TESS_IDA} ${instrument} --log-file ${log_file} --previous-month -d ${dbase} -o ${out_dir}
    else
        log_file="${HOME}/dbase/log/ida_oneoff_${LOG_DATE}.log"
        echo "Generating IDA file for TESS $instrument for month $month under ${out_dir}/${instrument}" | ${TEE} -a ${log_file}
        ${TESS_IDA} ${instrument} --log-file ${log_file} --for-month ${month} -d ${dbase} -o ${out_dir}
    fi
done

